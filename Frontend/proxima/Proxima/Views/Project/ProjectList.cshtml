@{
    ViewBag.Title = "Projects";
}
@model IEnumerable<Proxima.Models.ProjectModel>

<div class="content-wrapper">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="page-title">Projects</h1>
        <!-- Button to open the Create Project form -->
        <button type="button" class="btn btn-gradient-primary btn-rounded btn-fw" id="createProjectBtn">+ New Project</button>
    </div>
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">All Projects</h4>
            <table class="table table-hover">
                <tbody>
                    @foreach (var project in Model)
                    {
                        <tr>
                            <td>@project.Title</td>
                            <td>@project.Status</td>
                            <td>
                                <a href="@Url.Action("ProjectDetails", "Project", new { id = project.ProjectID })" class="btn btn-info">
                                    View Details
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Modal to create new project -->
<div class="modal fade" id="createProjectModal" tabindex="-1" aria-labelledby="createProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Create Project</h4>
                    <form class="forms-sample" id="projectForm">
                        <div class="form-group">
                            <label for="exampleInputUsername1">Title</label>
                            <input type="text" class="form-control" id="projectTitle" name="Title" placeholder="Title">
                        </div>
                        <div class="form-group">
                            <label for="startDate">Start Date</label>
                            <input type="date" class="form-control" id="startDateHidden" name="StartDate" style="opacity: 0; position: absolute; pointer-events: none;">
                            <input type="text" class="form-control" id="startDateFormatted" readonly>
                        </div>

                        <div class="form-group">
                            <label for="exampleInputEmail1">Estimated Due Date</label>
                            <input type="text" onclick="(this.type='date')"
                                   onblur="(this.type='text')" class="form-control" id="endDate" name="EndDate" placeholder="Select Due date">
                        </div>
                        <!-- Button to trigger AJAX request -->
                        <button type="button" class="btn btn-gradient-primary me-2" id="saveProject">Submit</button>
                        <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Include jQuery and Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Set current date for start date
        let today = new Date();
        let yyyy = today.getFullYear();
        let mm = String(today.getMonth() + 1).padStart(2, '0');
        let dd = String(today.getDate()).padStart(2, '0');

        let formattedDate = `${dd}/${mm}/${yyyy}`;
        document.getElementById("startDateFormatted").value = formattedDate;
        document.getElementById("startDateHidden").value = `${yyyy}-${mm}-${dd}`;
    });

    // Listen for changes on the hidden start date field
    document.getElementById("startDateHidden").addEventListener("change", function() {
        let dateParts = this.value.split("-");
        let formattedDate = `${dateParts[2]}/${dateParts[1]}/${dateParts[0]}`;
        document.getElementById("startDateFormatted").value = formattedDate;
    });

    // Show the date picker when clicking on the formatted start date field
    document.getElementById("startDateFormatted").addEventListener("click", function() {
        document.getElementById("startDateHidden").focus();
        document.getElementById("startDateHidden").showPicker();
    });

    // Open modal when create project button is clicked
    $("#createProjectBtn").click(function () {
        var modal = new bootstrap.Modal(document.getElementById('createProjectModal'));
        modal.show();
    });

    // Handle project save with AJAX when submit button is clicked
    $("#saveProject").click(function(event){
        event.preventDefault(); // Prevent form submission

        const project = {
            Title: $("#projectTitle").val().trim(),
            StartDate: $("#startDateHidden").val(),
            EndDate: $("#endDate").val()
        };

        console.log("Project Data:", project); // Check what data is being captured

        // Validation
        if (!project.Title || !project.StartDate || !project.EndDate) {
            alert("Please enter all fields.");
            return;
        }

        // AJAX call to save project
        $.ajax({
            url: '/Project/SaveProject', // Adjust the URL as per your API route
            type: 'POST',
            data: JSON.stringify(project),
            contentType: 'application/json',
            success: function (response) {
                alert("Project created successfully!");
                var modal = bootstrap.Modal.getInstance(document.getElementById('createProjectModal'));
                modal.hide(); // Hide the modal
                location.reload(); // Reload page to update project list
            },
            error: function (xhr) {
                alert("Error: " + xhr.responseText);
            }
        });
    });
</script>
